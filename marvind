#!/bin/sh
PIDFILE=var/marvinbot.pid
DEFAULT_LOG=var/log/marvinbot.log
mkdir -p var/log
CMD=./run_standalone.py
TEST_CMD='python setup.py test'

start_runner() {
    echo "Starting the bot"
    if [ -f $PIDFILE ]; then
        echo "Bot is running: $(cat $PIDFILE), remove $PIDFILE to force start"
    fi
    $CMD $>/dev/null &
    PID=$!
    echo $PID > $PIDFILE
    disown $PID
}


stop_runner() {
    echo "Stopping the bot"
    if [ -f $PIDFILE ]; then
        PID=$(cat $PIDFILE)
        kill -SIGTERM $PID;
        rm $PIDFILE
    fi
}

kill_runner() {
    echo "Stopping the bot"
    if [ -f $PIDFILE ]; then
        PID=$(cat $PIDFILE)
        kill -KILL $PID;
        rm $PIDFILE
    fi
}


status() {
    if [ -f $PIDFILE ]; then
        echo "Bot is running: $(cat $PIDFILE)"

    else
        echo "Bot is not running..."
    fi
    exit 0
}

run_tests() {
    $TEST_CMD
}

bot_log() {
    if [ -f $DEFAULT_LOG ]; then
       tail -f $DEFAULT_LOG
    fi
}

shell() {
    ipython -i marvinbot/shell.py
}

case $1 in
    start)
        start_runner      
        ;;    
    start_runner)
        start_runner
        ;;
    stop)
        stop_runner
        ;;    
    stop_runner)
        stop_runner
        ;;
    kill_runner)
        kill_runner
        ;;
    restart)
        stop_runner
        sleep 5
        start_runner
        ;;
    test)
        run_tests
        ;;
    status)
        status
        ;;
    bot_log)
        bot_log
        ;;
    shell)
        shell
        ;;
    *)
        echo "marvinbotd {start|stop|restart}"
        exit 1
        ;;
esac
